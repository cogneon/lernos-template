name: lernOS Produktionskette

on: push

jobs:
  convert_via_pandoc:
    strategy:
      matrix:
        language: [de]
    runs-on: ubuntu-latest
    steps:
      # Repository auschecken, damit Workflow es nutzen kann
      - uses: actions/checkout@v3
      
      # Delete Old Versions
      - run: rm -rf ./${{ matrix.language }}/build/${{ github.event.repository.name }}-guide.*
      - run: rm -rf ./docs/${{ matrix.language }}/*

      # Create Chapter List
      - name: Create Chapter List
        id: chapter_list
        run: echo "chapters=$(printf '%s ' ./${{ matrix.language }}/src/[0-9]*.md)" >> "$GITHUB_OUTPUT"

      # Create Web Version (mkdocs)
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV 
      - uses: actions/cache@v3
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: pip install mkdocs-material
      - run: pip install mkdocs-rss-plugin
      - run: mkdocs build -f ./${{ matrix.language }}/mkdocs.yml
    
      # Create Microsoft Word Version (docx)
      - run: mkdir -p ./docs/${{ matrix.language }}/download
      - uses: docker://pandoc/core
        with:
          args: >-
            ./${{ matrix.language }}/metadata.yaml
            --standalone
            --resource-path=./${{ matrix.language }}/src
            --number-sections
            --toc
            -V lang=${{ matrix.language }}-${{ matrix.language }}
            --output=./docs/${{ matrix.language }}/download/${{ github.event.repository.name }}-guide.docx
            ./${{ matrix.language }}/src/index.md ${{ steps.chapter_list.outputs.chapters }}

      # Create HTML Version (html)
      - uses: docker://pandoc/core
        with:
          args: >-
            ./${{ matrix.language }}/metadata.yaml
            --standalone
            --resource-path=./${{ matrix.language }}/src
            --number-sections
            --toc
            -V lang=${{ matrix.language }}-${{ matrix.language }}
            --output=./${{ matrix.language }}/build/${{ github.event.repository.name }}-guide.html
            ./${{ matrix.language }}/src/index.md ${{ steps.chapter_list.outputs.chapters }}

      # Create eBook Version (epub)
      - uses: docker://pandoc/core
        with:
          args: >-
            ./${{ matrix.language }}/metadata.yaml
            --standalone
            --resource-path=./${{ matrix.language }}/src
            --number-sections
            --toc
            -V lang=${{ matrix.language }}-${{ matrix.language }}
            --output=./${{ matrix.language }}/build/${{ github.event.repository.name }}-guide.epub
            ./${{ matrix.language }}/src/index.md ${{ steps.chapter_list.outputs.chapters }}

      # Create PDF Version (pdf)
      - uses: docker://pandoc/extra
        with:
          args: >-
            ./${{ matrix.language }}/metadata.yaml
            --standalone
            --resource-path=./${{ matrix.language }}/src
            --number-sections
            --toc
            -V lang=${{ matrix.language }}-${{ matrix.language }}
            --template /.pandoc/templates/eisvogel.latex
            --output=./${{ matrix.language }}/build/${{ github.event.repository.name }}-guide.pdf
            ./${{ matrix.language }}/src/index.md ${{ steps.chapter_list.outputs.chapters }}

      # Geänderte Datein zurück ins Repository committen
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Erzeugt von automatischer lernOS Produktionskette
